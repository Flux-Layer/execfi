"use client";

import { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { X } from "lucide-react";

interface MalwareAlertProps {
  onOpenQuests: () => void;
}

export function MalwareAlert({ onOpenQuests }: MalwareAlertProps) {
  const [pulseCount, setPulseCount] = useState(0);
  const [isHovered, setIsHovered] = useState(false);

  // Pulse animation counter
  useEffect(() => {
    const interval = setInterval(() => {
      setPulseCount((prev) => prev + 1);
    }, 2000);
    return () => clearInterval(interval);
  }, []);

  return (
    <motion.button
      onClick={onOpenQuests}
      onHoverStart={() => setIsHovered(true)}
      onHoverEnd={() => setIsHovered(false)}
      className="fixed top-4 right-4 z-50 group"
      whileHover={{ scale: 1.05 }}
      whileTap={{ scale: 0.95 }}
    >
      {/* Pulsing glow effect */}
      <motion.div
        className="absolute inset-0 rounded-full bg-red-500/30 blur-xl"
        animate={{
          scale: [1, 1.5, 1],
          opacity: [0.3, 0.6, 0.3],
        }}
        transition={{
          duration: 2,
          repeat: Infinity,
          ease: "easeInOut",
        }}
      />

      {/* Main alert icon */}
      <div className="relative flex items-center gap-2 px-4 py-2 bg-red-600 hover:bg-red-700 rounded-lg border-2 border-red-400 shadow-lg shadow-red-500/50 transition-colors">
        {/* Exclamation mark */}
        <motion.div
          className="flex items-center justify-center w-6 h-6 bg-white rounded-full"
          animate={{
            rotate: isHovered ? [0, -10, 10, -10, 0] : 0,
          }}
          transition={{
            duration: 0.5,
          }}
        >
          <span className="text-red-600 font-bold text-lg">!</span>
        </motion.div>

        {/* Warning text */}
        <div className="flex flex-col items-start">
          <motion.span
            className="text-white font-bold text-sm uppercase tracking-wider"
            animate={{
              opacity: [1, 0.7, 1],
            }}
            transition={{
              duration: 1.5,
              repeat: Infinity,
            }}
          >
            MALLWARE DETECTED
          </motion.span>
          <span className="text-red-200 text-xs">
            {pulseCount % 2 === 0 ? "Click to quarantine" : "System infected"}
          </span>
        </div>

        {/* Glitch effect overlay */}
        {isHovered && (
          <motion.div
            className="absolute inset-0 bg-red-400/20 rounded-lg"
            initial={{ opacity: 0 }}
            animate={{
              opacity: [0, 1, 0],
              x: [-2, 2, -2, 2, 0],
            }}
            transition={{
              duration: 0.3,
              repeat: 3,
            }}
          />
        )}
      </div>

      {/* Blinking indicator dot */}
      <motion.div
        className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full border-2 border-white"
        animate={{
          scale: [1, 1.2, 1],
          opacity: [1, 0.5, 1],
        }}
        transition={{
          duration: 1,
          repeat: Infinity,
        }}
      />
    </motion.button>
  );
}

interface MalwareModalProps {
  isOpen: boolean;
  onClose: () => void;
  children: React.ReactNode;
}

export function MalwareModal({ isOpen, onClose, children }: MalwareModalProps) {
  return (
    <AnimatePresence>
      {isOpen && (
        <>
          {/* Backdrop */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={onClose}
            className="fixed inset-0 bg-black/80 backdrop-blur-sm z-[100]"
          />

          {/* Modal */}
          <motion.div
            initial={{ scale: 0.9, opacity: 0, y: 20 }}
            animate={{ scale: 1, opacity: 1, y: 0 }}
            exit={{ scale: 0.9, opacity: 0, y: 20 }}
            transition={{ type: "spring", damping: 25, stiffness: 300 }}
            className="fixed inset-4 md:inset-8 lg:inset-16 z-[101] overflow-hidden"
          >
            {/* Warning border with glitch effect */}
            <motion.div
              className="absolute inset-0 border-4 border-red-500 rounded-2xl"
              animate={{
                borderColor: ["#ef4444", "#dc2626", "#ef4444"],
              }}
              transition={{
                duration: 2,
                repeat: Infinity,
              }}
            />

            {/* Modal content container */}
            <div className="relative w-full h-full bg-slate-950 rounded-2xl overflow-hidden">
              {/* Warning header */}
              <div className="relative bg-gradient-to-r from-red-600 to-red-700 p-4 border-b-2 border-red-500">
                {/* Glitch lines effect */}
                <motion.div
                  className="absolute inset-0 bg-red-400/20"
                  initial={{ x: "-100%" }}
                  animate={{ x: "100%" }}
                  transition={{
                    duration: 2,
                    repeat: Infinity,
                    repeatDelay: 3,
                  }}
                />

                <div className="relative flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    {/* Alert icon */}
                    <motion.div
                      className="flex items-center justify-center w-10 h-10 bg-white rounded-full"
                      animate={{
                        rotate: [0, -5, 5, -5, 0],
                      }}
                      transition={{
                        duration: 0.5,
                        repeat: Infinity,
                        repeatDelay: 2,
                      }}
                    >
                      <span className="text-red-600 font-bold text-2xl">!</span>
                    </motion.div>

                    <div>
                      <h2 className="text-white font-bold text-xl uppercase tracking-wide flex items-center gap-2">
                        ⚠️ MALLWARE INFECTION DETECTED
                      </h2>
                      <p className="text-red-200 text-sm">
                        Complete quests to clean your system
                      </p>
                    </div>
                  </div>

                  {/* Close button */}
                  <button
                    onClick={onClose}
                    className="flex items-center justify-center w-8 h-8 bg-red-800 hover:bg-red-900 rounded-lg transition-colors"
                  >
                    <X className="w-5 h-5 text-white" />
                  </button>
                </div>

                {/* Scanning animation */}
                <motion.div
                  className="absolute bottom-0 left-0 h-1 bg-yellow-400"
                  initial={{ width: "0%" }}
                  animate={{ width: "100%" }}
                  transition={{
                    duration: 3,
                    repeat: Infinity,
                    ease: "linear",
                  }}
                />
              </div>

              {/* Content area */}
              <div className="h-[calc(100%-76px)] overflow-y-auto">
                {children}
              </div>

              {/* Glitch effect overlay */}
              <motion.div
                className="absolute inset-0 pointer-events-none"
                initial={{ opacity: 0 }}
                animate={{
                  opacity: [0, 0.1, 0],
                }}
                transition={{
                  duration: 0.2,
                  repeat: Infinity,
                  repeatDelay: 5,
                }}
              >
                <div className="w-full h-full bg-red-500/10" />
              </motion.div>
            </div>
          </motion.div>
        </>
      )}
    </AnimatePresence>
  );
}
